@model Prodavalnik.Models.ViewModels.Ads.EditAdViewModel

@{
    ViewBag.Title = "Редакция на обява";
}

<h2>Редакция на обява</h2>

@using (Html.BeginForm("Edit", "Ads", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("EditAdName", Model.Title)

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control input-ad-add" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryName, new {htmlAttributes = new {@class = "form-control input-ad-add", disabled = "disabled"}})
                @Html.ValidationMessageFor(x => x.CategoryName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control input-ad-add" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.State, htmlAttributes: new { @class = "form-control input-ad-add" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-offset-5">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control textarea-ad-add" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-offset-5">
            @Html.Label("Снимки", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Images.Count() != 0)
                {
                    foreach (var image in Model.Images)
                    {
                        <div>
                            <img src="../../UploadsImages/@image.ImageName" alt="@image.ImageName" class="img-ad-edit" />
                        </div>
                    }
                    for (int i = 1; i <= 6 - Model.Images.Count(); i++)
                    {
                        <input type="file" name="images" id="image + @i.ToString()"/>
                    }
                }
                else
                {
                    <input type="file" name="images" id="image1" />
                    <input type="file" name="images" id="image2" />
                    <input type="file" name="images" id="image3" />
                    <input type="file" name="images" id="image4" />
                    <input type="file" name="images" id="image5" />
                    <input type="file" name="images" id="image6" />
                }


            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Редактирай обявата" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

